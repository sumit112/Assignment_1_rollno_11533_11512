#include<stdio.h>
#include<string.h>


#include<stdlib.h>

void start();
char* read_file(char name[256]){
	FILE *file;
	char *buffer;
	char ch;
	int fsize;
	file = fopen(name,"r");
	if (!file){
		printf("\nFile not found!\n");
		printf("Program terminated.");
		//return 1;
	}
	fseek(file,0,SEEK_END);
	fsize=ftell(file);
	fseek(file,0,SEEK_SET);
	buffer = (char*)malloc(sizeof(char)*(fsize+1));
	if(buffer==NULL){
	   printf("\nMemory error.\n");
	   printf("Program terminated.");
	   //return 1;
	}
	size_t newbuffer = fread(buffer, sizeof(char), fsize, file);
	buffer[++newbuffer] = '\0';
	fclose(file);
    return buffer;
}
int count_words(char *buffer){
	int c=0;
	while(*buffer!='\0'){
		if(*buffer==' ')
			c++;		
		buffer++;
	}
	c++;
	return c;
}
int count_para(char *buffer){
	int c=0;
	while(*buffer!='\0'){
		if(*buffer=='\n')
			c++;
		buffer++;
	}
	return c;
}
int count_chara(char *buffer){
	int c=0;
	while(*buffer!='\0'){
		c++;
		buffer++;
	}
	return c;
}
int length(char str[256]){
	int i=0;int c=0;
	while(str[i]!='\0'){
		i++;
		c++;
	}
	return c;
}
/*int * pattern(char word[256]){
	int l=length(word);
	int m[l-1];int i=0;int j;
	m[0]=0;
	j=1;
	while(j<l){
		if((i>0)&&(word[i]!=word[j]))
			i=m[i];
		if(word[i]==word[j])
			i++;
		m[j]=i;
		j++;
	}
	return m;
}*/
void search_str(char *buffer){
	char word[256];int i=0;int j=1;
	printf("\n\nSearch: ");
	scanf("%s",word);
	//int lm = length(word);
	//printf("%d\n",lm);
	//m=pattern(word);
	int l=length(word);
	int m[l-1];
	m[0]=0;
	while(j<l){
		if((i>0)&&(word[i]!=word[j]))
			i=m[i-1];
		if(word[i]==word[j])
			i++;
		m[j]=i;
		j++;
	}
	i=0;j=1;
	while(*buffer!='\0'){
		if((i>0)&&(word[i]!=*buffer)){
			i=m[i];
			//printf("\nDAMN %d",i);
		}
		if(word[i]==*buffer)
			i++;
		if(i==l){
			printf("\nString found at index: %d\n",(j-l+1));
			i=m[i-1];
			//printf("\nYOLO %d",i);
		}
		//printf("\nNOPE %d",j);
		buffer++;
		j++;
	}
}

int main(){
	start();
    return 0;
}
void start(){
	char name[256],word[256];
	char *text;
	int c=0;
	printf("NLP Assignment 1\n\n");
	printf("KMP Algorithm implementation\n");
	printf("Author: Verma and Daanish\n\n\n");
	printf("Enter name of the text file(.txt): ");
	scanf("%s", name);
	text=read_file(name);
	int words = count_words(text);
	int para = count_para(text);
	int chara = count_chara(text);
	printf("\nParagraphs in the document: %d\n",para);
	printf("Words in the document: %d\n",words);
	printf("Characters in the document: %d\n",chara);
	search_str(text);
	
}
